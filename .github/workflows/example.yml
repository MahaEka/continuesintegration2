name: C/CD Pipeline - Node.js with Docker and AWS
on:
 push:
   branches:
     - mane
     
jobs:
 # CI stage
   build-test:
     name: Build & Test
     runs-on : ubuntu - latest
     steps:
    # 1. checkout code
      - name: Checkout Code
        uses: actions/checkout@v4
    # 2. Setup Node.js environent
      - name: Setup Node.js enviroment
        uses: actions/setup-node@v4
    # 3. Install dependencies 
      - name: Install Dependencies
        run:  npm install
    # 4. Run Test
      - name: Run Test
        run: npm test
# Build and push Docker image to ECR
docker-build-push:
  name: Build & Push Docker Image
  needs: build-test
  runs-on: ubuntn-latest
  steps:
   - name: Checkout code
     needs: build-test
# Configure AWS credentials
   - name: Configure AWS credentials
     uses: aws-actions/configure-aws-credentials@v4
     with:
       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_kry }}
       aws-region: us-east-1
#login to ECR
   - name: login to Amazon ECR
     id: login-ecr
     uses: aws-actions/amazon-ecr-login@v2
# Build and tag Docker image
   - name: Build docker Image
     run: 
      IMAGE_TAG=latest
      docker build -t myapp:$IMAGE_TAG .
      docker tag myapp:$IMAGE_TAG  ${{ steps.login-ecr.outputs.registry }}/myapp:$IMAGE_TAG
# Push image to ECR
   - name: Push Docker Image
     run: 
      docker push ${{ steps.login-ecr.outputs.registry }}/myapp:latest
      
      
# DEPLOY to EC2
  deploy:
   name: Deploy via ssh
   uses: appleboy/ssh-action@1.0.0
   with:
    host:${{ secrets.EC2_HOST }}
    username:${{ secrets.EC2_HOST }}
    key:${{ secrets.EC2_SSH_KEY }}
    script: |
       aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${REGISTRY}
       docker pull ${REGISTRY}/${REPO_NAME}:latest
       docker stop myapp || true
       docker rm myapp || true
       docker run -d --name myapp -p 80:80 ${REGISTRY}/${REPO_NAME}:latest
    
     
